#!/bin/sh

set -ex

cd -- "${0%/*}"

die() {
  printf '%s: %s\n' "${0##*/}" "$*" >&2
  exit 1
}

HOST=$(uname -m)

MORE=

ZONE='/usr/share/zoneinfo/UTC'

REPO='https://repo-fastly.voidlinux.org/current/aarch64'

while getopts a:z:r:f opt; do
  case $opt in
    a)
      MORE="$OPTARG"
      ;;
    z)
      ZONE="$OPTARG"
      ;;
    r)
      REPO="${OPTARG}/current/aarch64"
      ;;
    f)
      HOST='aarch64'
      ;;
    *)
      exit 1
      ;;
  esac
done
shift $((OPTIND - 1))

SD_CARD=$(readlink -f "$1")

if [ ! -d rootfs ]; then
  die "server files not found"
fi

if [ -n "$MORE" ] && [ ! -d "$MORE" ]; then
  die "server files not found"
fi

if [ ! -f "$ZONE" ]; then
  die "timezone not found"
fi

if [ ! -b "$SD_CARD" ]; then
  die "sd card not found"
fi

if [ "$HOST" != aarch64 ]; then
  die "unsupported hardware"
fi

# format

blkdiscard -f "$SD_CARD"
printf ', 512M, c\n,' | sfdisk "$SD_CARD"
udevadm settle

mkfs.vfat -F32 -n boot "${SD_CARD}p1"
mkfs.xfs -L root "${SD_CARD}p2"

BOOT_UUID=$(blkid -s UUID -o value "${SD_CARD}p1")
ROOT_UUID=$(blkid -s UUID -o value "${SD_CARD}p2")

# mount

mount -o discard,noatime "${SD_CARD}p2" /mnt

mkdir /mnt/boot
mount -o discard,noatime "${SD_CARD}p1" /mnt/boot

mkdir /mnt/tmp
mount -o nosuid,nodev,noatime -t tmpfs tmpfs /mnt/tmp

mkdir /mnt/dev
mount --rbind /dev /mnt/dev
mount --make-rslave /mnt/dev

mkdir /mnt/sys
mount --rbind /sys /mnt/sys
mount --make-rslave /mnt/sys

mkdir /mnt/proc
mount --rbind /proc /mnt/proc
mount --make-rslave /mnt/proc

# void

mkdir -p /mnt/etc/xbps.d

printf "repository=%s\n" "$REPO" > /mnt/etc/xbps.d/00-repository-main.conf
# printf "repository=%s/nonfree\n" "$REPO" > /mnt/etc/xbps.d/10-repository-nonfree.conf

printf "syslog=false\n" > /mnt/etc/xbps.d/xbps.conf

{
  printf "ignorepkg=linux\n"
  printf "ignorepkg=linux-headers\n"
  printf "ignorepkg=btrfs-progs\n"
  printf "ignorepkg=sudo\n"
} > /mnt/etc/xbps.d/ignore.conf

mkdir -p /mnt/var/db/xbps/keys
cp -f /var/db/xbps/keys/* /mnt/var/db/xbps/keys/

XBPS_ARCH=aarch64-musl xbps-install -Syu -r /mnt \
  base-system \
  bat \
  bind-utils \
  bottom \
  chrony \
  curl \
  dracut \
  fastfetch \
  htop \
  inadyn \
  lsd \
  nano \
  nftables \
  opendoas \
  pfetch \
  rng-tools \
  rpi-firmware \
  rpi-kernel \
  rpi-kernel-headers \
  rsync \
  runit-nftables \
  snooze \
  socklog-void \
  unbound \
  vsv \
  wireguard-tools \
  zsh \
  zstd

ln -fs /etc/sv/nanoklogd /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/ntpd /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/rngd /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/snooze-daily /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/snooze-hourly /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/snooze-monthly /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/snooze-weekly /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/socklog-unix /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/dhcpcd /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/sshd /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/unbound /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/wireguard /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/inadyn /mnt/etc/runit/runsvdir/default/

if [ -f /mnt/etc/default/libc-locales ]; then
  sed -i '/en_US.UTF-8 UTF-8/s/^#//g' /mnt/etc/default/libc-locales
  sed -i '/en_US ISO-8859-1/s/^#//g' /mnt/etc/default/libc-locales
  chroot /mnt /bin/xbps-reconfigure -f glibc-locales
fi

printf "server\n" > /mnt/etc/hostname
ln -fs "$ZONE" /mnt/etc/localtime

mkdir -p /mnt/etc/dracut.conf.d
printf 'kernel_cmdline="root=UUID=%s rootfstype=xfs rootflags=discard,noatime"\n' "$ROOT_UUID" > /mnt/etc/dracut.conf.d/root.conf
printf 'compress="zstd -19 -T0"\n' > /mnt/etc/dracut.conf.d/zstd.conf

{
  printf "tmpfs /tmp tmpfs nosuid,nodev,noatime 0 0\n"
  printf "UUID=%s /boot vfat discard,noatime 0 2\n" "$BOOT_UUID"
} > /mnt/etc/fstab

{
  printf "\n"
  printf "printf 0 > /sys/class/leds/ACT/brightness\n"
  printf "printf 0 > /sys/class/leds/PWR/brightness\n"
} >> /mnt/etc/rc.local

printf "resolvconf=no\n" > /mnt/etc/resolvconf.conf # wireguard-tools

{
  printf "nameserver 127.0.0.1\n" # unbound
  printf "nameserver 1.1.1.1\n"
  printf "nameserver 1.0.0.1\n"
} > /mnt/etc/resolv.conf

# unbound

mkdir -p /mnt/var/lib/unbound
curl -fsS -o /mnt/var/lib/unbound/root.hints https://www.internic.net/domain/named.root
cp -f /mnt/etc/dns/root.key /mnt/var/lib/unbound/
chroot /mnt /bin/chown -R _unbound:_unbound /var/lib/unbound

# inadyn

chroot /mnt /bin/mkdir -p /var/cache/inadyn
chroot /mnt /bin/chown inadyn:inadyn /var/cache/inadyn
chroot /mnt /bin/chown inadyn:inadyn /etc/inadyn.conf
chroot /mnt /bin/chmod 600 /etc/inadyn.conf

# user

printf "permit nopass :wheel\n" > /mnt/etc/doas.conf

chroot /mnt /bin/useradd -M -s /bin/zsh -U -G wheel,socklog server
chroot /mnt /bin/install -d -m 700 -o server -g server /home/server

chroot /mnt /bin/passwd -dl root
chroot /mnt /bin/passwd -dl server

{
  printf "PermitRootLogin yes\n"
  printf "PasswordAuthentication no\n"
  printf "PrintLastLog no\n"
} > /mnt/etc/ssh/sshd_config.d/login.conf

chroot /mnt /bin/ssh-keygen -A

# setup

rsync -a --chown=root:root rootfs/ /mnt/

if [ -n "$MORE" ]; then
  rsync -a --chown=root:root "${MORE}/" /mnt/
fi

chroot /mnt /bin/chown -R server:server /home/server

chroot /mnt /bin/xbps-reconfigure -fa

# unmount

sync

umount -R /mnt
