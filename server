#!/bin/sh

set -e

if [ $# -ne 4 ]; then
  printf "./server <default_route> <ip_address> /usr/share/zoneinfo/<timezone> /dev/disk/by-id/<sd_card>\n" >&2
  exit 1
fi

ROUTE="$1"
ADDR="$2"
ZONE="$3"
SD_CARD="$4"

cd -- "$(dirname -- "$(readlink -f -- "$0")")"

die() {
  printf "server: %s\n" "$*" >&2
  exit 1
}

if [ "$(uname -m)" != aarch64 ] && ! grep -q binfmt_misc /proc/mounts; then
  die "unsupported hardware"
fi

if [ ! -b "$SD_CARD" ]; then
  die "sd card '$SD_CARD': not found"
fi

if [ ! -d rootfs ]; then
  die "directory 'rootfs': not found"
fi

if [ -e /tmp/server ]; then
  die "directory '/tmp/server': already exists"
fi

set -x

# format

if ! blkdiscard -fv "$SD_CARD"; then
  [ -b "${USB}-part1" ] && wipefs -a "${USB}-part1"
  [ -b "${USB}-part2" ] && wipefs -a "${USB}-part2"

  wipefs -fa "$SD_CARD"
fi

printf ", 512M, c\n," | sfdisk "$SD_CARD"

udevadm settle

BOOTFS=$(blkid -o value -s PARTUUID "${SD_CARD}-part1")
ROOTFS=$(blkid -o value -s PARTUUID "${SD_CARD}-part2")

mkfs.vfat -F32 "${SD_CARD}-part1"
mkfs.ext4 "${SD_CARD}-part2"

# mount

mkdir -p /tmp/server
mount -o noatime "${SD_CARD}-part2" /tmp/server

mkdir -p /tmp/server/boot
mount -o noatime "${SD_CARD}-part1" /tmp/server/boot

for _fs in dev proc sys; do
  mkdir -p /tmp/server/"$_fs"
  mount --rbind /"$_fs" /tmp/server/"$_fs"
  mount --make-rslave /tmp/server/"$_fs"
done

mkdir -p /tmp/server/tmp
mount -o nosuid,nodev,noatime -t tmpfs tmpfs /tmp/server/tmp

# void

mkdir -p /tmp/server/etc/xbps.d

printf "repository=https://repo-fastly.voidlinux.org/current/aarch64\n" > /tmp/server/etc/xbps.d/00-repository-main.conf

{
  printf "syslog=false\n"
  printf "ignorepkg=linux\n"
  printf "ignorepkg=linux-headers\n"
  printf "ignorepkg=sudo\n"
} > /tmp/server/etc/xbps.d/xbps.conf

mkdir -p /tmp/server/var/db/xbps/keys
cp -f /var/db/xbps/keys/* /tmp/server/var/db/xbps/keys/

XBPS_ARCH=aarch64-musl xbps-install -Syu -R https://repo-fastly.voidlinux.org/current/aarch64 -r /tmp/server \
  base-system \
  bat \
  bind-utils \
  bottom \
  cbonsai \
  chrony \
  curl \
  htop \
  inadyn \
  lsd \
  nano \
  neofetch \
  nftables \
  nnn \
  opendoas \
  pfetch \
  rng-tools \
  rpi-firmware \
  rpi-kernel \
  rpi-kernel-headers \
  rsync \
  runit-nftables \
  snooze \
  socklog-void \
  tree \
  unbound \
  vsv \
  wireguard-tools \
  zsh

ln -sf /etc/sv/nanoklogd /tmp/server/etc/runit/runsvdir/default/
ln -sf /etc/sv/ntpd /tmp/server/etc/runit/runsvdir/default/
ln -sf /etc/sv/rngd /tmp/server/etc/runit/runsvdir/default/
ln -sf /etc/sv/snooze-daily /tmp/server/etc/runit/runsvdir/default/
ln -sf /etc/sv/snooze-hourly /tmp/server/etc/runit/runsvdir/default/
ln -sf /etc/sv/snooze-monthly /tmp/server/etc/runit/runsvdir/default/
ln -sf /etc/sv/snooze-weekly /tmp/server/etc/runit/runsvdir/default/
ln -sf /etc/sv/socklog-unix /tmp/server/etc/runit/runsvdir/default/
ln -sf /etc/sv/sshd /tmp/server/etc/runit/runsvdir/default/
ln -sf /etc/sv/unbound /tmp/server/etc/runit/runsvdir/default/
ln -sf /etc/sv/wireguard /tmp/server/etc/runit/runsvdir/default/
ln -sf /etc/sv/inadyn /tmp/server/etc/runit/runsvdir/default/

if [ -f /tmp/server/etc/default/libc-locales ]; then
  sed -i "/en_US.UTF-8 UTF-8/s/^#//g" /tmp/server/etc/default/libc-locales
  sed -i "/en_US ISO-8859-1/s/^#//g" /tmp/server/etc/default/libc-locales
  chroot /tmp/server /bin/xbps-reconfigure -f glibc-locales
fi

printf "server\n" > /tmp/server/etc/hostname

ln -sf "$ZONE" /tmp/server/etc/localtime

printf "%s\n" "$(sed "s/[[:space:]]/ /g" /tmp/server/etc/fstab | tr -s " ")" > /tmp/server/etc/fstab # pretty
printf "PARTUUID=%s / ext4 noatime 0 1\n" "$ROOTFS" >> /tmp/server/etc/fstab
printf "PARTUUID=%s /boot vfat noatime 0 2\n" "$BOOTFS" >> /tmp/server/etc/fstab

{
  printf "\n"
  printf "ip link set dev eth0 up\n"
  printf "ip addr add %s/24 brd + dev eth0\n" "$ADDR"
  printf "ip route add default via %s\n" "$ROUTE"

  printf "\n"
  printf "printf 0 > /sys/class/leds/ACT/brightness\n"
  printf "printf 0 > /sys/class/leds/PWR/brightness\n"
} >> /tmp/server/etc/rc.local

{
  printf "nameserver 127.0.0.1\n" # unbound
  printf "nameserver 1.1.1.1\n"
  printf "nameserver 1.0.0.1\n"
} > /tmp/server/etc/resolv.conf

# wireguard

# printf "net.ipv4.ip_forward = 1\n" >> /tmp/server/etc/sysctl.conf
printf "net.ipv4.conf.all.forwarding = 1\n" >> /tmp/server/etc/sysctl.conf
printf "net.ipv6.conf.all.forwarding = 1\n" >> /tmp/server/etc/sysctl.conf

# unbound

curl -s -o /tmp/server/etc/unbound/root.hints https://www.internic.net/domain/named.root
ln -f /tmp/server/etc/dns/root.key /tmp/server/etc/unbound/

# inadyn

chroot /tmp/server /bin/mkdir -p /var/cache/inadyn
chroot /tmp/server /bin/chown inadyn:inadyn /var/cache/inadyn
chroot /tmp/server /bin/chown inadyn:inadyn /etc/inadyn.conf
chroot /tmp/server /bin/chmod 600 /etc/inadyn.conf

# user

printf "permit nopass :wheel\n" > /tmp/server/etc/doas.conf

chroot /tmp/server /bin/useradd -M -s /bin/zsh -U -G wheel,socklog server
chroot /tmp/server /bin/install -d -m 700 -o server -g server /home/server

chroot /tmp/server /bin/passwd -dl root
chroot /tmp/server /bin/passwd -dl server

sed -i "s/#PermitRootLogin prohibit-password/PermitRootLogin no/g" /tmp/server/etc/ssh/sshd_config
sed -i "s/#PasswordAuthentication yes/PasswordAuthentication no/g" /tmp/server/etc/ssh/sshd_config
sed -i "s/#PrintLastLog yes/PrintLastLog no/g" /tmp/server/etc/ssh/sshd_config

rsync -aAX --inplace --chown=root:root rootfs/ /tmp/server/ # server files

sed -i "s/%PLACEHOLDER%/PARTUUID=${ROOTFS}/g" /tmp/server/boot/cmdline.txt # fstab

chroot /tmp/server /bin/chown inadyn:inadyn /etc/inadyn.conf # inadyn

chroot /tmp/server /bin/chown -R server:server /home/server

chroot /tmp/server /bin/xbps-reconfigure -fa

# unmount

sync

umount -R /tmp/server

rmdir /tmp/server
