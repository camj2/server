#!/bin/sh

set -ex

cd -- "${0%/*}"

die() {
  printf '%b=> %s: %s%b\n' '\033[1;31m' "${0##*/}" "$*" '\033[0;00m' >&2
  exit 1
}

HOST=$(uname -m)

GATE=
ADDR=

ZONE='/usr/share/zoneinfo/UTC'

REPO='https://repo-fastly.voidlinux.org/current/aarch64'

while getopts d:i:z:r:f opt; do
  case $opt in
    d)
      GATE="$OPTARG"
      ;;
    i)
      ADDR="$OPTARG"
      ;;
    z)
      ZONE="$OPTARG"
      ;;
    r)
      REPO="$OPTARG"
      ;;
    f)
      HOST='aarch64'
      ;;
    *)
      die "unknown option"
      ;;
  esac
done
shift $((OPTIND - 1))

USB="$1"

if [ ! -r rootfs ] || [ ! -r rootfs-zfs ]; then
  die "server files not found"
fi

if [ ! -r "$ZONE" ]; then
  die "timezone not found"
fi

if [ ! -r "$USB" ]; then
  die "usb drive not found"
fi

if [ "$HOST" != aarch64 ] && ! grep -q binfmt_misc /proc/mounts; then
  die "unsupported hardware"
fi

# format

wipefs -fa "$USB"
printf ", 512M, c\n," | sfdisk "$USB"
udevadm settle

BOOTFS=$(blkid -o value -s PARTUUID "${USB}-part1")
ROOTFS=$(blkid -o value -s PARTUUID "${USB}-part2")

mkfs.vfat -F32 "${USB}-part1"
mkfs.xfs -f "${USB}-part2"

# mount

mount -o noatime "${USB}-part2" /mnt

mkdir /mnt/boot
mount -o noatime "${USB}-part1" /mnt/boot

mkdir /mnt/dev
mount --rbind /dev /mnt/dev
mount --make-rslave /mnt/dev

mkdir /mnt/sys
mount --rbind /sys /mnt/sys
mount --make-rslave /mnt/sys

mkdir /mnt/proc
mount --rbind /proc /mnt/proc
mount --make-rslave /mnt/proc

mkdir /mnt/tmp
mount -o nosuid,nodev,noatime -t tmpfs tmpfs /mnt/tmp

# void

mkdir -p /mnt/etc/xbps.d

printf "repository=%s\n" "$REPO" > /mnt/etc/xbps.d/00-repository-main.conf

{
  printf "ignorepkg=linux\n"
  printf "ignorepkg=linux-headers\n"
} > /mnt/etc/xbps.d/xbps.conf

mkdir -p /mnt/var/db/xbps/keys
cp -f /var/db/xbps/keys/* /mnt/var/db/xbps/keys/

XBPS_ARCH=aarch64-musl xbps-install -Syu -R "$REPO" -r /mnt \
  base-system \
  rpi-kernel \
  rpi-kernel-headers \
  rpi-firmware \
  rng-tools \
  chrony \
  rsync \
  curl \
  nano \
  htop \
  bottom \
  fastfetch \
  pfetch

ln -sf /etc/sv/rngd /mnt/etc/runit/runsvdir/default/
ln -sf /etc/sv/ntpd /mnt/etc/runit/runsvdir/default/
ln -sf /etc/sv/dhcpcd /mnt/etc/runit/runsvdir/default/
ln -sf /etc/sv/sshd /mnt/etc/runit/runsvdir/default/

printf "PermitRootLogin yes\n" > /mnt/etc/ssh/sshd_config.d/login.conf
printf "root:voidlinux\n" | chroot /mnt /bin/chpasswd -c SHA512

sed -i "s/root=[^ ]*/root=PARTUUID=${ROOTFS}/" /mnt/boot/cmdline.txt
printf "disable_splash=1\n" >> /mnt/boot/config.txt

printf "void\n" > /mnt/etc/hostname
ln -sf "$ZONE" /mnt/etc/localtime

sed -i 's/[[:space:]]/ /g;s/ \+/ /g;/^#/!d' /mnt/etc/fstab
{
  printf "PARTUUID=%s / xfs noatime 0 0\n" "$ROOTFS"
  printf "PARTUUID=%s /boot vfat ro,noatime 0 2\n" "$BOOTFS"
  printf "tmpfs /tmp tmpfs nosuid,nodev,noatime 0 0\n"
} >> /mnt/etc/fstab

{
  printf "\n"
  printf "printf 0 > /sys/class/leds/ACT/brightness\n"
  printf "printf 0 > /sys/class/leds/PWR/brightness\n"
} >> /mnt/etc/rc.local

if [ -n "$GATE" ] && [ -n "$ADDR" ]; then
  {
    printf "\n"
    printf "nohook resolv.conf\n"

    printf "\n"
    printf "interface eth0\n"
    printf "static ip_address=%s/24\n" "$ADDR"
    printf "static routers=%s\n" "$GATE"
    printf "static domain_name_servers=%s\n" "$GATE"
  } >> /mnt/etc/dhcpcd.conf
fi

{
  printf "nameserver 1.1.1.1\n"
  printf "nameserver 1.0.0.1\n"
} > /mnt/etc/resolv.conf

rsync -a --chown=root:root ./ /mnt/root/ # server files

sync

umount -R /mnt
