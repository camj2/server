#!/bin/sh

set -e

if [ $# -ne 4 ]; then
  printf "usage: usb <zoneinfo> <ip_address_router> <ip_address> <usb_drive>\n" >&2
  exit 1
fi

ZONEINFO="$1"
ROUTE="$2"
ADDR="$3"
USB="$4"

die() {
  printf "usb: %s\n" "$*" >&2
  exit 1
}

if [ ! -d rootfs ]; then
  die "directory 'rootfs': not found"
fi

if [ ! -x server ]; then
  die "script 'server': not found"
fi

if [ ! -b "$USB" ]; then
  die "usb drive '$USB': not found"
fi

if ! grep -q binfmt_misc /proc/mounts; then
  die "unsupported hardware"
fi

if [ -e /tmp/server ]; then
  die "directory '/tmp/server': already exists"
fi

set -x

# format

[ -e "${USB}-part1" ] && wipefs -a "${USB}-part1"
[ -e "${USB}-part2" ] && wipefs -a "${USB}-part2"
wipefs -fa "$USB"

printf ", 512M, c\n," | sfdisk "$USB"

udevadm settle

mkfs.vfat -F32 "${USB}-part1"
mkfs.ext4 "${USB}-part2"

BOOTFS=$(blkid -o value -s PARTUUID "${USB}-part1")
ROOTFS=$(blkid -o value -s PARTUUID "${USB}-part2")

# mount

mkdir -p /tmp/server
mount -o noatime "${USB}-part2" /tmp/server

mkdir -p /tmp/server/boot
mount -o noatime "${USB}-part1" /tmp/server/boot

for _fs in dev proc sys; do
  mkdir -p /tmp/server/"$_fs"
  mount --rbind /"$_fs" /tmp/server/"$_fs"
  mount --make-rslave /tmp/server/"$_fs"
done

mkdir -p /tmp/server/tmp
mount -o nosuid,nodev -t tmpfs tmpfs /tmp/server/tmp

# void

mkdir -p /tmp/server/etc/xbps.d
printf "repository=https://repo-fastly.voidlinux.org/current/aarch64\n" > /tmp/server/etc/xbps.d/00-repository-main.conf
printf "ignorepkg=linux-headers\n" > /tmp/server/etc/xbps.d/xbps.conf

mkdir -p /tmp/server/var/db/xbps/keys
cp -f /var/db/xbps/keys/* /tmp/server/var/db/xbps/keys/

XBPS_ARCH=aarch64-musl xbps-install -Syu -R https://repo-fastly.voidlinux.org/current/aarch64 -r /tmp/server \
  base-system \
  rpi-firmware \
  rpi-kernel \
  rpi-kernel-headers \
  rng-tools \
  chrony \
  rsync \
  curl \
  git \
  make \
  nano \
  htop \
  neofetch

ln -sf /etc/sv/rngd /tmp/server/etc/runit/runsvdir/default/
ln -sf /etc/sv/ntpd /tmp/server/etc/runit/runsvdir/default/
ln -sf /etc/sv/sshd /tmp/server/etc/runit/runsvdir/default/

sed -i "s/#PermitRootLogin prohibit-password/PermitRootLogin yes/g" /tmp/server/etc/ssh/sshd_config

printf "root:voidlinux\n" | chroot /tmp/server /bin/chpasswd -c SHA512

printf "server\n" > /tmp/server/etc/hostname

ln -sf "$ZONEINFO" /tmp/server/etc/localtime

printf "nameserver %s\n" "$ROUTE" > /tmp/server/etc/resolv.conf

{
  printf "\n"
  printf "%s\n" "ip link set dev eth0 up"
  printf "%s\n" "ip addr add ${ADDR}/24 brd + dev eth0"
  printf "%s\n" "ip route add default via ${ROUTE}"

  printf "\n"
  printf "%s\n" "printf 0 > /sys/class/leds/ACT/brightness"
  printf "%s\n" "printf 0 > /sys/class/leds/PWR/brightness"
} >> /tmp/server/etc/rc.local

{
  printf "PARTUUID=%s / ext4 noatime 0 1\n" "$ROOTFS"
  printf "PARTUUID=%s /boot vfat ro,noatime 0 2\n" "$BOOTFS"
} >> /tmp/server/etc/fstab

sed -i "s#root=/dev/mmcblk0p2#root=PARTUUID=$ROOTFS ro forcefsck net.ifnames=0#g" /tmp/server/boot/cmdline.txt

printf "disable_splash=1\n" >> /tmp/server/boot/config.txt

# copy

rsync -aAX rootfs /tmp/server/root/ # server files
rsync -aAX server /tmp/server/root/ # install script

chown -R root:root /tmp/server/root

chmod 750 /tmp/server/root

# unmount

sync

umount -R /tmp/server

rmdir /tmp/server
