#!/bin/sh

set -e

if [ $# -ne 4 ]; then
  exit 1
fi

ROUTE="$1"
ADDR="$2"
ZONE="$3"
USB="$4"

cd -- "${0%/*}"

die() {
  printf "usb: %s\n" "$*" >&2
  exit 1
}

if ! grep -q binfmt_misc /proc/mounts; then
  die "unsupported hardware"
fi

if [ ! -b "$USB" ]; then
  die "usb drive '$USB': not found"
fi

if [ ! -x server ]; then
  die "script 'server': not found"
fi

if [ ! -x server-zfs ]; then
  die "script 'server-zfs': not found"
fi

if [ ! -d rootfs ]; then
  die "directory 'rootfs': not found"
fi

if [ ! -d rootfs-zfs ]; then
  die "directory 'rootfs-zfs': not found"
fi

set -x

# format

wipefs -fa "$USB"
printf ", 512M, c\n," | sfdisk "$USB"
udevadm settle

BOOTFS=$(blkid -o value -s PARTUUID "${USB}-part1")
ROOTFS=$(blkid -o value -s PARTUUID "${USB}-part2")

mkfs.vfat -F32 "${USB}-part1"
mkfs.xfs -f "${USB}-part2"

# mount

mount -o noatime "${USB}-part2" /mnt

mkdir /mnt/boot
mount -o noatime "${USB}-part1" /mnt/boot

for fs in dev proc sys; do
  mkdir /mnt/"$fs"
  mount --rbind /"$fs" /mnt/"$fs"
  mount --make-rslave /mnt/"$fs"
done

mkdir /mnt/tmp
mount -t tmpfs tmpfs /mnt/tmp

# void

mkdir -p /mnt/etc/xbps.d

printf "repository=https://repo-fastly.voidlinux.org/current/aarch64\n" > /mnt/etc/xbps.d/00-repository-main.conf

{
  printf "ignorepkg=linux\n"
  printf "ignorepkg=linux-headers\n"
} > /mnt/etc/xbps.d/xbps.conf

mkdir -p /mnt/var/db/xbps/keys
cp -f /var/db/xbps/keys/* /mnt/var/db/xbps/keys/

XBPS_ARCH=aarch64-musl xbps-install -Syu -R https://repo-fastly.voidlinux.org/current/aarch64 -r /mnt \
  base-voidstrap \
  rpi-kernel \
  rpi-kernel-headers \
  rpi-firmware \
  rng-tools \
  chrony \
  rsync \
  curl \
  nano \
  zsh \
  lsd \
  bat \
  vsv \
  htop \
  bottom \
  fastfetch \
  pfetch

ln -sf /etc/sv/rngd /mnt/etc/runit/runsvdir/default/
ln -sf /etc/sv/ntpd /mnt/etc/runit/runsvdir/default/
ln -sf /etc/sv/sshd /mnt/etc/runit/runsvdir/default/

sed -i "s/#PermitRootLogin prohibit-password/PermitRootLogin yes/g" /mnt/etc/ssh/sshd_config
printf "root:voidlinux\n" | chroot /mnt /bin/chpasswd -c SHA512
chroot /mnt /bin/chsh -s /bin/zsh

printf "server\n" > /mnt/etc/hostname
ln -sf "$ZONE" /mnt/etc/localtime

{
  printf "nameserver 1.1.1.1\n"
  printf "nameserver 1.0.0.1\n"
} > /mnt/etc/resolv.conf

{
  printf "\n"
  printf "ip link set dev eth0 up\n"
  printf "ip addr add %s/24 brd + dev eth0\n" "$ADDR"
  printf "ip route add default via %s\n" "$ROUTE"

  printf "\n"
  printf "printf 0 > /sys/class/leds/ACT/brightness\n"
  printf "printf 0 > /sys/class/leds/PWR/brightness\n"
} >> /mnt/etc/rc.local

{
  printf "PARTUUID=%s / xfs noatime 0 1\n" "$ROOTFS"
  printf "PARTUUID=%s /boot vfat ro,noatime 0 2\n" "$BOOTFS"
} >> /mnt/etc/fstab

rsync -a --chown=root:root ./ /mnt/root/                    # repo
rsync -a --chown root:root ./rootfs/home/server/ /mnt/root/ # user

if [ -n "$USB_USERFS_OVERLAY" ]; then
  rsync -a --chown=root:root "$USB_USERFS_OVERLAY"/ /mnt/root/ # custom user files
fi

chmod 750 /mnt/root
chmod 700 /mnt/root/.ssh # fix

sed -i "s/root=[^ ]*/root=PARTUUID=${ROOTFS}/" /mnt/boot/cmdline.txt

sync
umount -R /mnt
