#!/bin/sh

set -ex

cd -- "${0%/*}"

die() {
  printf '%b=> %s: %s%b\n' '\033[1;31m' "${0##*/}" "$*" '\033[0;00m' >&2
  exit 1
}

HOST=$(uname -m)

GATE=
ADDR=

ZONE='/usr/share/zoneinfo/UTC'

REPO='https://repo-fastly.voidlinux.org/current/aarch64'

MORE=

while getopts d:i:z:r:a:f opt; do
  case $opt in
    d)
      GATE="$OPTARG"
      ;;
    i)
      ADDR="$OPTARG"
      ;;
    z)
      ZONE="$OPTARG"
      ;;
    r)
      REPO="$OPTARG"
      ;;
    a)
      MORE="$OPTARG"
      ;;
    f)
      HOST='aarch64'
      ;;
    *)
      die "unknown option"
      ;;
  esac
done
shift $((OPTIND - 1))

SD_CARD="$1"

if [ ! -d rootfs ] || [ ! -d rootfs-zfs ]; then
  die "server files not found"
fi

if [ -n "$MORE" ] && [ ! -d "$MORE" ]; then
  die "server files not found"
fi

if [ ! -f "$ZONE" ]; then
  die "timezone not found"
fi

if [ ! -b "$SD_CARD" ]; then
  die "sd card not found"
fi

if [ "$HOST" != aarch64 ]; then
  die "unsupported hardware"
fi

# format

xbps-install -Syu zfs-lts
modprobe zfs
zgenhostid -f

blkdiscard -f "$SD_CARD"
printf ', 512M, c\n,' | sfdisk "$SD_CARD"
udevadm settle

BOOTFS=$(blkid -o value -s PARTUUID "${SD_CARD}-part1")

mkfs.vfat -F32 "${SD_CARD}-part1"
zpool create \
  -o ashift=12 \
  -o autotrim=on \
  -O atime=off \
  -O xattr=sa \
  -O acltype=posix \
  -O compression=lz4 \
  -O sync=disabled \
  -m none server "${SD_CARD}-part2"

zfs create -o mountpoint=/ -o canmount=noauto server/root
zfs create -o mountpoint=/home server/home

zpool set bootfs=server/root server

zpool export server

# mount

zpool import -N -R /mnt server

zfs mount server/root
zfs mount server/home

mkdir /mnt/boot
mount -o discard,noatime "${SD_CARD}-part1" /mnt/boot

mkdir /mnt/dev
mount --rbind /dev /mnt/dev
mount --make-rslave /mnt/dev

mkdir /mnt/sys
mount --rbind /sys /mnt/sys
mount --make-rslave /mnt/sys

mkdir /mnt/proc
mount --rbind /proc /mnt/proc
mount --make-rslave /mnt/proc

mkdir /mnt/tmp
mount -o nosuid,nodev,noatime -t tmpfs tmpfs /mnt/tmp

# void

mkdir -p /mnt/etc/xbps.d

printf "repository=%s\n" "$REPO" > /mnt/etc/xbps.d/00-repository-main.conf

{
  printf "syslog=false\n"
  printf "ignorepkg=linux\n"
  printf "ignorepkg=linux-headers\n"
  printf "ignorepkg=sudo\n"
} > /mnt/etc/xbps.d/xbps.conf

mkdir -p /mnt/var/db/xbps/keys
cp -f /var/db/xbps/keys/* /mnt/var/db/xbps/keys/

XBPS_ARCH=aarch64-musl xbps-install -Syu -R "$REPO" -r /mnt \
  base-system \
  bat \
  bind-utils \
  bottom \
  chrony \
  curl \
  dracut \
  fastfetch \
  htop \
  inadyn \
  lsd \
  nano \
  nftables \
  opendoas \
  pfetch \
  rng-tools \
  rpi-firmware \
  rpi-kernel \
  rpi-kernel-headers \
  rsync \
  runit-nftables \
  snooze \
  socklog-void \
  unbound \
  vsv \
  wireguard-tools \
  zfs-lts \
  zfs-prune-snapshots \
  zsh \
  zstd

ln -fs /etc/sv/nanoklogd /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/ntpd /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/rngd /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/snooze-daily /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/snooze-hourly /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/snooze-monthly /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/snooze-weekly /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/socklog-unix /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/dhcpcd /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/sshd /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/unbound /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/wireguard /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/inadyn /mnt/etc/runit/runsvdir/default/
ln -fs /etc/sv/zed /mnt/etc/runit/runsvdir/default/

if [ -f /mnt/etc/default/libc-locales ]; then
  sed -i '/en_US.UTF-8 UTF-8/s/^#//g' /mnt/etc/default/libc-locales
  sed -i '/en_US ISO-8859-1/s/^#//g' /mnt/etc/default/libc-locales
  chroot /mnt /bin/xbps-reconfigure -f glibc-locales
fi

printf "server\n" > /mnt/etc/hostname
ln -fs "$ZONE" /mnt/etc/localtime

mkdir -p /mnt/etc/dracut.conf.d
printf 'add_dracutmodules+=" zfs "\n' >> /mnt/etc/dracut.conf.d/zfs.conf
printf "compress=zstd\n" >> /mnt/etc/dracut.conf
cp -f /etc/hostid /mnt/etc/

sed -i 's/[[:space:]]/ /g;s/ \+/ /g;/^#/!d' /mnt/etc/fstab
{
  printf "PARTUUID=%s /boot vfat ro,discard,noatime 0 2\n" "$BOOTFS"
  printf "tmpfs /tmp tmpfs nosuid,nodev,noatime 0 0\n"
} >> /mnt/etc/fstab

{
  printf "\n"
  printf "printf 0 > /sys/class/leds/ACT/brightness\n"
  printf "printf 0 > /sys/class/leds/PWR/brightness\n"
} >> /mnt/etc/rc.local

if [ -n "$GATE" ] && [ -n "$ADDR" ]; then
  {
    printf "\n"
    printf "interface eth0\n"
    printf "static ip_address=%s/24\n" "$ADDR"
    printf "static routers=%s\n" "$GATE"
    printf "static domain_name_servers=%s\n" "$GATE"
  } >> /mnt/etc/dhcpcd.conf
fi

printf "resolvconf=no\n" > /mnt/etc/resolvconf.conf # wireguard-tools

{
  printf "nameserver 127.0.0.1\n" # unbound
  printf "nameserver 1.1.1.1\n"
  printf "nameserver 1.0.0.1\n"
} > /mnt/etc/resolv.conf

# wireguard

# printf "net.ipv4.ip_forward = 1\n" >> /mnt/etc/sysctl.conf
printf "net.ipv4.conf.all.forwarding = 1\n" >> /mnt/etc/sysctl.conf
printf "net.ipv6.conf.all.forwarding = 1\n" >> /mnt/etc/sysctl.conf

# unbound

curl -fsS -o /mnt/etc/unbound/root.hints https://www.internic.net/domain/named.root
ln -f /mnt/etc/dns/root.key /mnt/etc/unbound/

# inadyn

chroot /mnt /bin/mkdir -p /var/cache/inadyn
chroot /mnt /bin/chown inadyn:inadyn /var/cache/inadyn
chroot /mnt /bin/chown inadyn:inadyn /etc/inadyn.conf
chroot /mnt /bin/chmod 600 /etc/inadyn.conf

# user

printf "permit nopass :wheel\n" > /mnt/etc/doas.conf

chroot /mnt /bin/useradd -M -s /bin/zsh -U -G wheel,socklog server
chroot /mnt /bin/install -d -m 700 -o server -g server /home/server

chroot /mnt /bin/passwd -dl root
chroot /mnt /bin/passwd -dl server

{
  printf "PermitRootLogin yes\n"
  printf "PasswordAuthentication no\n"
  printf "PrintLastLog no\n"
} > /mnt/etc/ssh/sshd_config.d/login.conf

chroot /mnt /bin/ssh-keygen -A

# setup

rsync -a --chown=root:root rootfs/ /mnt/                    # server files
rsync -a --chown=root:root rootfs-zfs/ /mnt/                # server files
[ -n "$MORE" ] && rsync -a --chown=root:root "$MORE"/ /mnt/ # server files (custom)

chroot /mnt /bin/chown inadyn:inadyn /etc/inadyn.conf # fix

chroot /mnt /bin/chown -R server:server /home/server      # fix
chroot /mnt /bin/chmod 700 /home/server /home/server/.ssh # fix

chroot /mnt /bin/xbps-reconfigure -fa

# unmount

sync

zfs snapshot server/root@base
zfs snapshot server/home@base

umount -R /mnt

zpool sync

udevadm settle

zpool export server
