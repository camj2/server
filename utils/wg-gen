#!/bin/sh

set -e

OUTPUT='./wireguard'

WG_PORT=51820 # default wireguard port
WG_PREFIX=

WG_ENDPOINT=
HOST_PORT="$WG_PORT"

gen_pre() {
  num1=$(openssl rand -hex 1)
  num2=$(openssl rand -hex 2)
  num3=$(openssl rand -hex 2)
  num4=$(openssl rand -hex 2)

  # printf 'fd%02x:%04x:%04x:%04x\n' "$num1" "$num2" "$num3" "$num4"
  printf 'fd%s:%s:%s:%s\n' "$num1" "$num2" "$num3" "$num4"
}

gen_ip() {
  int="$1"
  peer="$2"

  printf '%s::%x\n' "$WG_PREFIX" "$int"
  printf 'local-data: "%s AAAA %s::%x"\n' "$peer" "$WG_PREFIX" "$int" >> .unbound.conf
}

gen_wg() {
  HOST_IP=$(gen_ip 1 server)

  HOST_KEY=$(wg genkey)
  HOST_PUB=$(echo "$HOST_KEY" | wg pubkey)

  {
    echo "[Interface]"
    echo "PrivateKey = ${HOST_KEY}"
    echo "Address = ${HOST_IP}/64"
    echo "ListenPort = ${HOST_PORT}"
  } > 1-server.conf

  int=1
  while [ $# -gt 0 ]; do
    int=$((int + 1))
    peer="$1"
    name="${int}-${peer}"
    shift

    PEER_IP=$(gen_ip "$int" "$peer")

    PSK=$(wg genpsk)
    PEER_KEY=$(wg genkey)
    PEER_PUB=$(echo "$PEER_KEY" | wg pubkey)

    HOST_ENDPOINT="$WG_ENDPOINT"
    PEER_ENDPOINT=
    PEER_PORT="$WG_PORT"
    PEER_KEEP=
    while getopts e:s:p:k: opt; do
      case $opt in
        e)
          HOST_ENDPOINT="$OPTARG"
          ;;
        s)
          PEER_ENDPOINT="$OPTARG"
          ;;
        p)
          PEER_PORT="$OPTARG"
          ;;
        k)
          PEER_KEEP="$OPTARG" # recommended value (if set): 25
          ;;
        *)
          die "unknown option"
          ;;
      esac
    done
    shift $((OPTIND - 1))

    {

      echo

      echo "# ${peer}"

      echo "[Peer]"
      echo "PublicKey = ${PEER_PUB}"
      echo "PresharedKey = ${PSK}"
      echo "AllowedIPs = ${PEER_IP}/128"

      [ -n "${PEER_ENDPOINT}" ] && echo "Endpoint = ${PEER_ENDPOINT}"

    } >> 1-server.conf

    {

      echo "[Interface]"
      echo "PrivateKey = ${PEER_KEY}"
      echo "Address = ${PEER_IP}/128"
      echo "DNS = ${HOST_IP}"

      [ -n "${PEER_ENDPOINT}" ] && echo "ListenPort = ${PEER_PORT}"

      echo

      echo "[Peer]"
      echo "PublicKey = ${HOST_PUB}"
      echo "PresharedKey = ${PSK}"
      echo "AllowedIPs = ${WG_PREFIX}::/64"
      echo "Endpoint = ${HOST_ENDPOINT}"

      [ -n "${PEER_KEEP}" ] && echo "PersistentKeepalive = ${PEER_KEEP}"

    } > "${name}.conf"

    qrencode -r "${name}.conf" -o "${name}.png"
  done
}

pkg() {
  cmd=$(command -v "$1")
  [ -x "$cmd" ]
}

die() {
  printf "%s: %s\n" "${0##*/}" "$*" >&2
  exit 1
}

while getopts o:e:p:P:g opt; do
  case $opt in
    o)
      OUTPUT="$OPTARG"
      ;;
    e)
      WG_ENDPOINT="$OPTARG"
      ;;
    p)
      HOST_PORT="$OPTARG"
      ;;
    P)
      WG_PREFIX="$OPTARG"
      ;;
    g)
      gen_pre
      exit
      ;;
    *)
      die "unknown option"
      ;;
  esac
done
shift $((OPTIND - 1))

if ! pkg wg; then
  die "wireguard-tools not installed"
fi

if ! pkg qrencode; then
  die "qrencode not installed"
fi

if [ $# -eq 0 ]; then
  die "peer name(s) required"
fi

if [ $# -ge 65535 ]; then
  die "too many peers (whoa)" # hex value cannot exceed: ffff
fi

if [ -z "$WG_ENDPOINT" ]; then
  die "endpoint required"
fi

mkdir -m 700 -- "$OUTPUT"
cd -- "$OUTPUT"

[ -z "$WG_PREFIX" ] && WG_PREFIX=$(gen_pre)
gen_wg "$@"

column -t -o " " .unbound.conf > unbound.conf
rm .unbound.conf
